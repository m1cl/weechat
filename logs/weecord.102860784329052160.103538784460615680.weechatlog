2017-09-10 15:15:36	mrcl	hey guys
2017-09-10 15:15:47	mrcl	I have a question regarding action creators..
2017-09-10 15:16:14	mrcl	I have this method:
2017-09-10 15:16:14		```js
2017-09-10 15:16:14		export function decrementCounter(value = 1) {
2017-09-10 15:16:14		  return {
2017-09-10 15:16:14		    type: COUNTER_DECREMENT,
2017-09-10 15:16:14		    payload: value
2017-09-10 15:16:14		  }
2017-09-10 15:16:14		}
2017-09-10 15:16:14		```
2017-09-10 15:16:31	mrcl	now when i call it like this
2017-09-10 15:17:46	mrcl	```js
2017-09-10 15:17:46		onClick={this.props.decrement}
2017-09-10 15:17:46		```
2017-09-10 15:17:46		Then my action.payload shows as "Proxy { <target>: Object, <handler>: Object }"
2017-09-10 15:17:46		But if i call it like this
2017-09-10 15:17:46		```js
2017-09-10 15:17:46		onClick={this.props.decrement.bind(this, 1)}
2017-09-10 15:17:46		```
2017-09-10 15:17:46		then it shows the value 1
2017-09-10 15:18:00	mrcl	EDIT: ```js
2017-09-10 15:18:00		onClick={this.props.decrement}
2017-09-10 15:18:00		```
2017-09-10 15:18:00		Then my action.payload shows as "Proxy { <target>: Object, <handler>: Object }"
2017-09-10 15:18:00		But if i call it like this
2017-09-10 15:18:00		```js
2017-09-10 15:18:00		onClick={this.props.decrement.bind(this, 1)}
2017-09-10 15:18:00		```
2017-09-10 15:18:00		then it shows the value 1
2017-09-10 15:18:09	mrcl	EDIT: ```js
2017-09-10 15:18:09		onClick={this.props.decrement}
2017-09-10 15:18:09		```
2017-09-10 15:18:09		Then my action.payload shows as "Proxy { <target>: Object, <handler>: Object }"
2017-09-10 15:18:09		But if i call it like this
2017-09-10 15:18:09		```js
2017-09-10 15:18:09		onClick={this.props.decrement.bind(this, 1)}
2017-09-10 15:18:09		```
2017-09-10 15:18:09		then it shows the value 1
2017-09-10 15:18:37	mrcl	Why isn't the value set to 1 as my default param value?
2017-09-10 15:19:35	mrcl	Ah i see.. the event is passed in as the value argument..
2017-09-10 18:45:01	mrcl	@acemarke  interesting! It still looks way too complex for what i am doing right now though
2017-09-10 18:45:07	mrcl	I'll keep it simple for now
2017-09-10 18:46:35	mrcl	I have a question regarding redux and connecting components.. what if i want it to fetch some data or something? Usually i would have a container with a UI component inside
2017-09-10 18:47:10	mrcl	Would i then wrap my Container using connect and pass the callbacks down to the UI component from my container?
2017-09-10 18:48:34	blockhead	you don't wrap you're container with connect....connect _creates_ a container for you
2017-09-10 18:48:44	blockhead	EDIT: you don't wrap your container with connect....connect _creates_ a container for you
2017-09-10 18:50:04	mrcl	yeah but how do i then add functionality to it?
2017-09-10 18:50:22	mrcl	fetching data from the server etc..
2017-09-10 18:53:25	blockhead	so there are basically 4 approaches
2017-09-10 18:53:25		1) In your component you simply make ajax calls, and then manually dispatch actions when during the lifecycle of that call
2017-09-10 18:53:25		2) Use custom middleware (ie., you put some metadata on an action, and the middleware reads that and makes an appropriate call and fires the appropriate actions after
2017-09-10 18:53:25		3) Use redux thunk. This is kinda like a generalization of 2). It is middleware which will take any action that is a function (a thunk) and call it with the dispatcher and the store so you can do anything you want basically there
2017-09-10 18:53:25		4) Use other "side-effect" middleware like redux-saga
2017-09-10 19:09:08	blockhead	also `this.loadUser(12)`  is business logic
